# -------------------------------
# üèóÔ∏è Etapa de build (gera o .jar)
# -------------------------------
FROM maven:3.9.6-eclipse-temurin-17 AS build
WORKDIR /app

# Copia todo o c√≥digo fonte
COPY . .

# ü©µ Corrige quebras de linha do Windows (CRLF -> LF) e garante execu√ß√£o do wrapper
RUN apt-get update && apt-get install -y dos2unix \
    && dos2unix mvnw \
    && chmod +x mvnw
#Converte qualquer CRLF e garanti que o script seja execut√°vel no Linux.
RUN apt-get update && apt-get install -y dos2unix \
    && dos2unix mvnw wait-for-it.sh \
    && chmod +x mvnw wait-for-it.sh

# Build do projeto sem rodar testes
RUN ./mvnw clean package -DskipTests

# -------------------------------
# üöÄ Etapa de runtime (leve e otimizada)
# -------------------------------
FROM eclipse-temurin:17-jre
WORKDIR /app

# Copia o .jar da etapa anterior
COPY --from=build /app/target/*.jar app.jar

# Copia o script wait-for-it.sh e ajusta permiss√µes
COPY wait-for-it.sh /wait-for-it.sh
RUN chmod +x /wait-for-it.sh

# Exp√µe a porta da API
EXPOSE 8080

# Aguarda o MySQL estar acess√≠vel antes de subir a aplica√ß√£o
ENTRYPOINT ["/wait-for-it.sh", "mysql:3306", "--", "java", "-jar", "app.jar"]
